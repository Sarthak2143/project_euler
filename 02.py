# Problem II: Even Fibonacci Numbers

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def fib(n):
    if n <= 2:
        return n
    else:
        return fib(n-1) + fib(n-2)

col_of_fibs = [] 

for i in range(1, 40):
    if fib(i) < 4000000 and fib(i) % 2 == 0:
        print(i, fib(i))
        col_of_fibs.append(fib(i))
    if fib(i) > 4000000:
        break

print(sum(set(col_of_fibs))) # => 4613732 
